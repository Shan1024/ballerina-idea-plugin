<idea-plugin>
    <id>org.ballerinalang</id>
    <name>Ballerina</name>
    <version>0.970.0-beta2</version>
    <vendor email="ballerinalang@wso2.com" url="http://wso2.org">WSO2 Inc.</vendor>

    <description><![CDATA[
      <a href="http://ballerinalang.org">Ballerina</a> is a general purpose, concurrent and strongly typed programming language with both textual and graphical syntax, optimized for integration. This plugin supports development of Ballerina programs with IntelliJ IDEA.
      Please note that the graphical syntax of Ballerina is not yet supported by this plugin. For that, you can use  <a href="http://ballerinalang.org/downloads/">Ballerina Composer</a> which is available in Ballerina Tools distribution.<br>
    ]]></description>

    <change-notes><![CDATA[
      <ul>
        <li>Supports Ballerina v0.970.0-beta2 grammar.</li>
      </ul>
    ]]>
    </change-notes>

    <!-- please see http://www.jetbrains.org/intellij/sdk/docs/basics/getting_started/build_number_ranges.html for description -->
    <idea-version since-build="163"/>

    <!-- please see http://www.jetbrains.org/intellij/sdk/docs/basics/getting_started/plugin_compatibility.html
         on how to target different products -->
    <!-- uncomment to enable plugin in all products -->
    <depends>com.intellij.modules.lang</depends>
    <depends optional="true" config-file="java-deps.xml">com.intellij.modules.java</depends>
    <!--<depends>org.toml.lang</depends>-->

    <extensions defaultExtensionNs="com.intellij">

        <fileTypeFactory implementation="org.ballerinalang.plugins.idea.BallerinaFileTypeFactory"/>

        <lang.parserDefinition language="Ballerina"
                               implementationClass="org.ballerinalang.plugins.idea.BallerinaParserDefinition"/>
        <lang.ast.factory language="Ballerina"
                          implementationClass="org.ballerinalang.plugins.idea.BallerinaASTFactory"/>
        <lang.commenter language="Ballerina" implementationClass="org.ballerinalang.plugins.idea.BallerinaCommenter"/>

        <lang.syntaxHighlighterFactory language="Ballerina"
                                       implementationClass="org.ballerinalang.plugins.idea.highlighting.BallerinaSyntaxHighlighterFactory"/>
        <stubIndex implementation="org.ballerinalang.plugins.idea.stubs.index.BallerinaPackageIndex"/>
        <stubIndex implementation="org.ballerinalang.plugins.idea.stubs.index.BallerinaFunctionIndex"/>
        <!--<stubIndex implementation="org.ballerinalang.plugins.idea.stubs.index.BallerinaStructIndex"/>-->
        <stubIndex implementation="org.ballerinalang.plugins.idea.stubs.index.BallerinaGlobalVariableIndex"/>
        <!--<stubIndex implementation="org.ballerinalang.plugins.idea.stubs.index.BallerinaConnectorIndex"/>-->
        <!--<stubIndex implementation="org.ballerinalang.plugins.idea.stubs.index.BallerinaEnumIndex"/>-->
        <stubIndex implementation="org.ballerinalang.plugins.idea.stubs.index.BallerinaAnnotationIndex"/>
        <!--<stubIndex implementation="org.ballerinalang.plugins.idea.stubs.index.BallerinaTransformerIndex"/>-->
        <!--<stubIndex implementation="org.ballerinalang.plugins.idea.stubs.index.BallerinaConstantIndex"/>-->
        <stubIndex implementation="org.ballerinalang.plugins.idea.stubs.index.BallerinaGlobalEndpointIndex"/>
        <stubIndex implementation="org.ballerinalang.plugins.idea.stubs.index.BallerinaEndpointIndex"/>
        <!--<stubIndex implementation="org.ballerinalang.plugins.idea.stubs.index.BallerinaActionIndex"/>-->
        <stubIndex implementation="org.ballerinalang.plugins.idea.stubs.index.BallerinaWorkerIndex"/>
        <stubIndex implementation="org.ballerinalang.plugins.idea.stubs.index.BallerinaNamespaceIndex"/>
        <!--Add organization index-->

        <stubElementTypeHolder class="org.ballerinalang.plugins.idea.psi.BallerinaTypes"/>

        <indexPatternBuilder implementation="org.ballerinalang.plugins.idea.BallerinaIndexPatternBuilder"/>

        <codeInsight.lineMarkerProvider language="Ballerina"
                                        implementationClass="org.ballerinalang.plugins.idea.marker.BallerinaTypeFunctionMarker"/>

        <!--<completion.contributor language="Ballerina"-->
        <!--implementationClass="org.ballerinalang.plugins.idea.completion.BallerinaReferenceCompletionContributor"/>-->
        <completion.contributor language="Ballerina"
                                implementationClass="org.ballerinalang.plugins.idea.completion.BallerinaKeywordContributor"/>
        <completion.contributor language="Ballerina"
                                implementationClass="org.ballerinalang.plugins.idea.completion.BallerinaCompletionContributor"/>

        <lang.findUsagesProvider language="Ballerina"
                                 implementationClass="org.ballerinalang.plugins.idea.usage.BallerinaFindUsageProvider"/>

        <lang.elementManipulator forClass="org.ballerinalang.plugins.idea.psi.BallerinaCompletePackageName"
                                 implementationClass="org.ballerinalang.plugins.idea.psi.manipulator.BallerinaPackageManipulator"/>

        <externalAnnotator language="Ballerina"
                           implementationClass="org.ballerinalang.plugins.idea.BallerinaExternalAnnotator"/>

        <!--<spellchecker.support language="Ballerina"-->
        <!--implementationClass="org.ballerinalang.plugins.idea.spellchecker.BallerinaSpellcheckingStrategy"/>-->
        <defaultTemplatePropertiesProvider
                implementation="org.ballerinalang.plugins.idea.actions.BallerinaTemplatePropertiesProvider"/>

        <annotator language="Ballerina"
                   implementationClass="org.ballerinalang.plugins.idea.codeinsight.daemon.impl.BallerinaAnnotator"/>

        <!-- file templates -->
        <internalFileTemplate name="Ballerina File"/>
        <internalFileTemplate name="Ballerina Main"/>

        <lang.braceMatcher language="Ballerina"
                           implementationClass="org.ballerinalang.plugins.idea.codeinsight.highlighting.BallerinaPairedBraceMatcher"/>

        <!--live templates-->
        <defaultLiveTemplatesProvider
                implementation="org.ballerinalang.plugins.idea.template.BallerinaLiveTemplateProvider"/>
        <liveTemplateContext implementation="org.ballerinalang.plugins.idea.template.BallerinaEverywhereContextType"/>
        <liveTemplateContext implementation="org.ballerinalang.plugins.idea.template.BallerinaCodeContextType$File"/>
        <liveTemplateContext implementation="org.ballerinalang.plugins.idea.template.BallerinaCodeContextType$Service"/>
        <!--<liveTemplateContext-->
        <!--implementation="org.ballerinalang.plugins.idea.template.BallerinaCodeContextType$Resource"/>-->
        <!--<liveTemplateContext-->
        <!--implementation="org.ballerinalang.plugins.idea.template.BallerinaCodeContextType$Connector"/>-->
        <!--<liveTemplateContext-->
        <!--implementation="org.ballerinalang.plugins.idea.template.BallerinaCodeContextType$Action"/>-->
        <liveTemplateContext
                implementation="org.ballerinalang.plugins.idea.template.BallerinaCodeContextType$Function"/>
        <!--<liveTemplateContext-->
        <!--implementation="org.ballerinalang.plugins.idea.template.BallerinaCodeContextType$ForkJoin"/>-->

        <!--formatter-->
        <lang.formatter language="Ballerina"
                        implementationClass="org.ballerinalang.plugins.idea.formatter.BallerinaFormattingModelBuilder"/>
        <codeStyleSettingsProvider
                implementation="org.ballerinalang.plugins.idea.formatter.settings.BallerinaCodeStyleSettingsProvider"/>
        <langCodeStyleSettingsProvider
                implementation="org.ballerinalang.plugins.idea.formatter.settings.BallerinaLanguageCodeStyleSettingsProvider"/>

        <quoteHandler fileType="Ballerina file"
                      className="org.ballerinalang.plugins.idea.codeinsight.editoractions.BallerinaQuoteHandler"/>

        <!--<enterHandlerDelegate/>-->
        <!--implementation="org.ballerinalang.plugins.idea.formatter.BallerinaEnterBetweenBracesHandler"/>-->

        <!-- sdk -->
        <sdkType implementation="org.ballerinalang.plugins.idea.sdk.BallerinaSdkType"/>
        <!--<projectSdkSetupValidator id="BallerinaSdk"-->
        <!--implementation="org.ballerinalang.plugins.idea.codeinsight.daemon.impl.BallerinaProjectSdkSetupValidator"/>-->
        <library.presentationProvider
                implementation="org.ballerinalang.plugins.idea.sdk.BallerinaSdkLibraryPresentationProvider"/>
        <applicationService
                serviceImplementation="org.ballerinalang.plugins.idea.sdk.BallerinaPathModificationTracker"/>

        <projectService serviceInterface="org.ballerinalang.plugins.idea.sdk.BallerinaSdkService"
                        serviceImplementation="org.ballerinalang.plugins.idea.sdk.BallerinaSmallIDEsSdkService"
                        overrides="false"/>
        <editorNotificationProvider
                implementation="org.ballerinalang.plugins.idea.inspections.WrongSdkConfigurationNotificationProvider"/>

        <!-- module -->
        <moduleType id="BALLERINA_MODULE" implementationClass="org.ballerinalang.plugins.idea.BallerinaModuleType"/>
        <moduleConfigurationEditorProvider
                implementation="org.ballerinalang.plugins.idea.configuration.BallerinaModuleEditorsProvider"
                order="first"/>
        <editorNotificationProvider
                implementation="org.ballerinalang.plugins.idea.inspections.WrongModuleTypeNotificationProvider"/>

        <!-- run application -->
        <programRunner id="ballerinaRunner" implementation="org.ballerinalang.plugins.idea.runconfig.BallerinaRunner"/>

        <configurationType
                implementation="org.ballerinalang.plugins.idea.runconfig.application.BallerinaApplicationRunConfigurationType"/>
        <runConfigurationProducer
                implementation="org.ballerinalang.plugins.idea.runconfig.application.BallerinaApplicationRunConfigurationProducer"/>

        <runLineMarkerContributor language="Ballerina"
                                  implementationClass="org.ballerinalang.plugins.idea.runconfig.BallerinaRunLineMarkerProvider"/>
        <!--<runLineMarkerContributor language="Ballerina"-->
        <!--implementationClass="org.ballerinalang.plugins.idea.runconfig.BallerinaTestLineMarkerProvider"/>-->

        <console.folding implementation="org.ballerinalang.plugins.idea.runconfig.BallerinaConsoleFolding"/>

        <codeInsight.template.postfixTemplateProvider language="Ballerina"
                                                      implementationClass="org.ballerinalang.plugins.idea.codeinsight.template.postfix.BallerinaPostfixTemplateProvider"/>

    </extensions>
    <actions>
        <!-- Add your actions here -->
        <action id="Ballerina.NewBallerinaFile" class="org.ballerinalang.plugins.idea.actions.BallerinaCreateFileAction"
                text="Ballerina File" description="Create new Ballerina file">
            <add-to-group group-id="NewGroup" anchor="before" relative-to-action="NewFile"/>
        </action>
    </actions>
</idea-plugin>
